# Number of Threads for the Extension
numberOfThreads: 3

# This will create it in specific Tier aka Component. Replace <COMPONENT_ID>.
# Please make sure to have a trailing |.
# To find out the COMPONENT_ID, please see the screen shot here https://docs.appdynamics.com/display/latest/Build+a+Monitoring+Extension+Using+Java
metricPrefix: "Server|Component:%s|Custom Metrics|Cluster Stats|"
#metricPrefix:  "Custom Metrics|Cluster Stats|"

appName: "k8s-cluster-agent"
appTierName: "KUBERNETES"

# Path to your kubectl Client configuration
kubeClientConfig: "/home/origin/.kube/config"

#server or cluster
apiMode: "server"

# Events API Key obtained from AppDynamics --> Analytics --> Configuration API Keys --> Add
# The API Key you create needs to be able to Manage and Publish Custom Analytics Events
eventsApiKey: ""

# Global Account Name obtained from
# AppDynamics --> Settings --> License --> Accounts --> Global Account Name
accountName: ""

podsSchemaName: "k8s_pod_snapshots"

nodeSchemaName: "k8s_node_snapshots"

eventsSchemaName: "k8s_events"

deploySchemaName: "k8s_deploy_snapshots"

daemonSchemaName: "k8s_daemon_snapshots"

rsSchemaName: "k8s_rs_snapshots"

endpointSchemaName: "k8s_endpoint_snapshots"

batchSize: "100"

proxyHost: ""
proxyPort: ""
proxyUser: ""
proxyPass: ""

entities:
- type: "pod"
- type: "node"
- type: "deployment"
- type: "daemon"
- type: "replica"
- type: "event"
- type: "endpoint"

dashboardTemplatePath: "/Users/sasha.jeltuhin/dev/kubernetes-snapshot-extension/src/main/resources/templates/k8s_dashboard_template.json"
nodeTemplatePath: "templates/k8s_node_template.json"
dashboardNameSuffix: "SUMMARY"
controllerAPIUser: "k8sresty@customer1:k8sresty"
controllerUrl: "http://451controllerbase-oscert-aoaz7jqm.srv.ravcloud.com:8090/controller/"
dashboardCheckInterval: "600"  # time in seconds between the checks if the default dashboard exists


# Events Service Endpoint. These Default settings are for SaaS Users. Change, if you are on Premise
eventsUrl: "https://analytics.api.appdynamics.com"


podsSchemaDefinition: '{
   "schema" : {
      "object_uid": "string",
      "clusterName": "string",
      "creationTimestamp": "date",
      "deletionTimestamp": "date",
      "labels": "string",
      "annotations": "string",
      "name": "string",
      "namespace": "string",
      "containerCount": "integer",
      "initContainerCount": "integer",
      "nodeName": "string",
      "priority": "integer",
      "restartPolicy": "string",
      "serviceAccountName": "string",
      "terminationGracePeriodSeconds": "integer",
      "tolerations": "string",
      "nodeAffinityPreferred": "string",
      "nodeAffinityRequired": "string",
      "hasPodAffinity": "boolean",
      "hasPodAntiAffinity": "boolean",
      "hostIP": "string",
      "phase": "string",
      "podIP": "string",
      "reason": "string",
      "startTime": "date",
      "lastTransitionTimeCondition": "date",
      "reasonCondition": "string",
      "statusCondition": "string",
      "typeCondition": "string",
      "limitsDefined": "boolean",
      "liveProbes": "integer",
      "readyProbes": "integer",
      "podRestarts": "integer",
      "numPrivileged": "integer",
      "ports": "string",
      "memRequest": "float",
      "cpuRequest": "float",
      "cpuLimit": "float",
      "memLimit": "float",
      "containerStates": "string",
      "images": "string",
      "waitReasons": "string",
      "termReasons": "string",
      "runningStartTime": "date",
      "terminationTime": "date",
      "mounts": "string"
   }
}'

nodeSchemaDefinition: '{
  "schema" : {
      "nodeName": "string",
      "clusterName": "string",
      "podCIDR": "string",
      "taints": "string",
      "phase": "string",
      "addresses": "string",
      "labels": "string",
      "role": "string",
      "cpuCapacity": "float",
      "memCapacity": "float",
      "podCapacity": "integer",
      "cpuAllocations": "float",
      "memAllocations": "float",
      "podAllocations": "integer",
      "kubeletPort": "integer",
      "osArch": "string",
      "kubeletVersion": "string",
      "runtimeVersion": "string",
      "machineID": "string",
      "osName": "string",
      "attachedVolumes": "string",
      "volumesInUse": "string",
      "ready": "string",
      "outOfDisk": "string",
      "memoryPressure": "string",
      "diskPressure": "string"
  }
}'

eventsSchemaDefinition: '{
   "schema" : {
      "firstTimestamp": "date",
      "object_kind": "string",
      "object_name": "string",
      "object_namespace": "string",
      "object_resourceVersion": "string",
      "object_uid": "string",
      "lastTimestamp": "date",
      "message": "string",
      "annotations": "string",
      "clusterName": "string",
      "creationTimestamp": "date",
      "deletionTimestamp": "date",
      "finalizers": "string",
      "generateName": "string",
      "generation": "string",
      "initializers": "string",
      "labels": "string",
      "name": "string",
      "namespace": "string",
      "ownerReferences": "string",
      "resourceVersion": "string",
      "selfLink": "string",
      "type": "string",
      "count": "string",
      "source_component": "string",
      "source_host": "string",
      "reason": "string"
   }
}'


deploySchemaDefinition: '{
  "schema": {
    "clusterName": "string",
    "name": "string",
    "namespace": "string",
    "object_uid": "string",
    "creationTimestamp": "date",
    "deletionTimestamp": "date",
    "labels": "string",
    "annotations": "string",
    "minReadySecs": "integer",
    "progressDeadlineSecs": "integer",
    "replicas": "integer",
    "revisionHistoryLimits": "integer",
    "strategy": "string",
    "maxSurge": "string",
    "maxUnavailable": "string",
    "replicasAvailable": "integer",
    "replicasUnAvailable": "integer",
    "replicasUpdated": "integer",
    "collisionCount": "integer",
    "replicasReady": "integer"
  }
}'

daemonSchemaDefinition: '{
  "schema": {
    "clusterName": "string",
    "name": "string",
    "namespace": "string",
    "object_uid": "string",
    "creationTimestamp": "date",
    "deletionTimestamp": "date",
    "minReadySecs": "integer",
    "revisionHistoryLimits": "integer",
    "replicasAvailable": "integer",
    "replicasUnAvailable": "integer",
    "collisionCount": "integer",
    "replicasReady": "integer",
    "numberScheduled": "integer",
    "desiredNumber": "integer",
    "missScheduled": "integer",
    "updatedNumberScheduled": "integer"
  }
}'


rsSchemaDefinition: '{
  "schema": {
    "clusterName": "string",
    "name": "string",
    "namespace": "string",
    "object_uid": "string",
    "creationTimestamp": "date",
    "deletionTimestamp": "date",
    "minReadySecs": "integer",
    "replicas": "integer",
    "rsReplicasAvailable": "integer",
    "rsReplicasUnAvailable": "integer",
    "replicasLabeled": "integer",
    "replicasReady": "integer"
  }
}'

endpointSchemaDefinition: '{
  "schema": {
    "name": "string",
    "clusterName": "string",
    "namespace": "string",
    "object_uid": "string",
    "creationTimestamp": "date",
    "deletionTimestamp": "date",
    "ip_up": "integer",
    "ip_down": "integer",
    "downContext": "string"
  }
}'

